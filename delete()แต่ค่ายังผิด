#include<stdio.h>
#include<stdlib.h>
typedef struct nd{
	char c;
	struct nd *next;
}node;
node *top = NULL;

void push(char x){
	node *n = malloc(sizeof(node));
	n->next=top;
	top = n;
	n->c =x;
}

char pop(){
	char p;
	node *n;
	n = top;
	top = top->next;
	p = n->c;
	free(n);
	return p;
}

char stacktop(){
	if(top == NULL)
		return NULL;
	else
		return top->c;
}

int checkpr(char temp){
	int pr;
	if(temp == '^')
		pr=3;
	else if(temp == '('||temp == ')')
		pr=2;
	else if(temp == '*'||temp == '/')
		pr=1;
	else if(temp == '+'||temp == '-')
		pr=0;
	else{
		pr=-1;
	}
	return pr;
}

void checkoper(char ck){
	int num;
	if(stacktop()==NULL)
		push(ck);
	else{
		if(checkpr(ck)<=checkpr(stacktop()))
	while((checkpr(ck)<=checkpr(stacktop()))&&(stacktop()!=NULL))
	printf("%c",pop());
	push(ck);
	}
	if(ck == ')' || ck== '(' ){
		num =0;
		while(top != NULL && ((stacktop() == '(') || (stacktop()== ')'))&&num != 2){
		 	deletetop();
			num++;
		}
	}
}
void deletetop(count){
		node *n;
		n = top;
		top = top->next;
		free(n);
		count--;
	
}
void main(){
	char ch;
	while((ch = getchar())!='\n'){
		if(isdigit(ch)||isalpha(ch))
			printf("%c",ch);
		else
			checkoper(ch);
	}
	while(stacktop()!=NULL)
		printf("%c",pop());
}
